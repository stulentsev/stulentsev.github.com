<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: octopress | Byte Friendly]]></title>
  <link href="http://tech.tulentsev.com/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://tech.tulentsev.com/"/>
  <updated>2012-12-09T12:32:18+04:00</updated>
  <id>http://tech.tulentsev.com/</id>
  <author>
    <name><![CDATA[Sergio Tulentsev]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Deferred posting with Octopress]]></title>
    <link href="http://tech.tulentsev.com/2012/10/deferred-posting-with-octopress/"/>
    <updated>2012-10-29T10:42:00+04:00</updated>
    <id>http://tech.tulentsev.com/2012/10/deferred-posting-with-octopress</id>
    <content type="html"><![CDATA[<p>One of the powerful things that Wordpress can do and Octopress can't, is deferred posting
(or scheduled blogging, whatever). I never really missed it when I was using Wordpress, so
I switched to Octopress without hesitation. But now I could use that feature. In case you
don't know, deferred posting allows you to write a post beforehand and schedule its release
to some moment in future.</p>

<p><img class="center" src="/images/uploads/2012/10/wp-datepicker.png"></p>

<p>This functionality is kinda trivial if you use dynamic request processing and a database
(like wordpress does). But with static sites it's not at all that easy. So before
implementing something myself, I decided to google for other works on this topic. Here's
a good article that I've found: <a href="http://instant-thinking.de/2012/08/03/synced-and-scheduled-blogging-with-octopress/#fnref:3">Synced and scheduled blogging with Octopress</a>.
It also contains some links to other articles.</p>

<p>In short, people write a daemon (or scheduled script) that checks your drafts from time to
time. If a draft is due, it is copied to <code>_posts</code> directory and generate/deploy sequence
is initiated.</p>

<p>This, obviously, requires a computer that is always on and has actual content for the site.
I don't really like the idea of a daemon, but, I guess, this is a price you pay for using
"blog engine for hackers".</p>

<p>Could this be implemented as an external web service? Is there an opportunity for a
profitable startup? :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrating from Wordpress to Octopress - 301 redirects]]></title>
    <link href="http://tech.tulentsev.com/2012/09/migrating-from-wordpress-to-octopress-301-redirects/"/>
    <updated>2012-09-03T17:00:00+04:00</updated>
    <id>http://tech.tulentsev.com/2012/09/migrating-from-wordpress-to-octopress-301-redirects</id>
    <content type="html"><![CDATA[<p>Okay, I probably can't avoid writing the obligatory migration article :) If in the
migration process you decided to also change the domain name, then this article is for you.
If your domain name is the same, only the hosting is different, then you should set up a
<a href="http://octopress.org/docs/deploying/github/">CNAME</a>. If you wiped Wordpress and installed
Octopress in its stead, then this article is useless to you, move on.</p>

<!-- more -->


<p>We want to set up a good 301 redirect, such that will take links to old blog posts and
redirect them to corresponding posts on the new domain. Redirection is good. It keeps
search visitors happy (bots or humans).</p>

<p>We can implement it using <code>mod_rewrite</code>. Wordpress already requires <code>mod_rewrite</code>, so
we can count on its presence. Navigate to blog's root and look for file named <code>.htaccess</code>.
It should have this (or similar) content:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>BEGIN WordPress&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>&lt;IfModule mod_rewrite.c>
</span><span class='line'>RewriteEngine On
</span><span class='line'>RewriteBase /blog/
</span><span class='line'>RewriteRule ^index.php$ - [L]
</span><span class='line'>RewriteCond %{REQUEST_FILENAME} !-f
</span><span class='line'>RewriteCond %{REQUEST_FILENAME} !-d
</span><span class='line'>RewriteRule . /blog/index.php [L]
</span><span class='line'>&lt;/IfModule>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>END WordPress&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>We don't need all this, because we won't be using Wordpress anymore. Replace it with this
snippet</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;IfModule mod_rewrite.c>
</span><span class='line'>Options +FollowSymlinks
</span><span class='line'>RewriteEngine On
</span><span class='line'>RewriteCond %{HTTP_HOST} ^example.com [NC]
</span><span class='line'>RewriteRule ^(.*)$ http://blog.example2.com/$1 [L,R=301]&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>RewriteCond %{HTTP_HOST} ^www.example.com [NC]
</span><span class='line'>RewriteRule ^(.*)$ http://blog.example2.com/$1 [L,R=301]
</span><span class='line'>&lt;/IfModule></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>In short, these two rules take any URL from the old domain (with or without <code>www</code>) and
replace domain name to a new one.</p>

<p>If your octopress blog is functioning on the new domain, no more actions are required. It
should work already.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to automatically open new octopress post in editor?]]></title>
    <link href="http://tech.tulentsev.com/2012/09/how-to-automatically-open-new-post-in-editor/"/>
    <updated>2012-09-03T15:51:00+04:00</updated>
    <id>http://tech.tulentsev.com/2012/09/how-to-automatically-open-new-post-in-editor</id>
    <content type="html"><![CDATA[<p>Recently I discovered <a href="http://octopress.org">Octopress</a> and instead of writing another
article on how to migrate to it from Wordpress, I decided to do something else. And,
fortunately enough, the topic presented itself. :)</p>

<p>So, Octopress is not your conventional blog engine. You create new posts by running
a command in the terminal. I'm quite comfortable with creating new posts with a rake task.
What I didn't like is that I needed to run another command to actually open the post in my
editor. Here's my fix to that. It patches the <code>new_post</code> command, by adding new optional
parameter to it, <code>:open_in_editor</code>. If you pass <code>true</code> (or other truthy value),
then the post will be opened in
my default <code>$EDITOR</code> (which is TextMate at this moment).
Now the creation of new post can look like this:</p>

<p><code>bash
rake new_post['How to automatically open new post in editor?',:open]
</code></p>

<!-- more -->


<p>And, finally, the diff of this change:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Diff </span><a href='http://pastie.org/pastes/4825151/text?key=qxucmagulrlugkhkyogkg'>Download this snippet </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gh">diff --git a/Rakefile b/Rakefile</span>
</span><span class='line'><span class="gh">index 58e1925..df8ff7e 100644</span>
</span><span class='line'><span class="gd">--- a/Rakefile</span>
</span><span class='line'><span class="gi">+++ b/Rakefile</span>
</span><span class='line'><span class="gu">@@ -90,10 +90,10 @@ end&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;p&gt; # usage rake new_post[my-new-post] or rake new_post[&#39;my new post&#39;] or rake new_post (defaults to &quot;new-post&quot;)
</span><span class='line'> desc &quot;Begin a new post in #{source_dir}/#{posts_dir}&quot;
</span><span class='line'><span class="gd">-task :new_post, :title do |t, args|</span>
</span><span class='line'><span class="gi">+task :new_post, :title, :open_in_editor do |t, args|</span>
</span><span class='line'>   raise &quot;### You haven&#39;t set anything up yet. First run &lt;code&gt;rake install&lt;/code&gt; to set up an Octopress theme.&quot; unless File.directory?(source_dir)
</span><span class='line'>   mkdir_p &quot;#{source_dir}/#{posts_dir}&quot;
</span><span class='line'><span class="gd">-  args.with_defaults(:title =&gt; &#39;new-post&#39;)</span>
</span><span class='line'><span class="gi">+  args.with_defaults(:title =&gt; &#39;new-post&#39;, :open_in_editor =&gt; false)</span>
</span><span class='line'>   title = args.title
</span><span class='line'>   filename = &quot;#{source_dir}/#{posts_dir}/#{Time.now.strftime(&#39;%Y-%m-%d&#39;)}-#{title.to_url}.#{new_post_ext}&quot;
</span><span class='line'>   if File.exist?(filename)
</span><span class='line'><span class="gu">@@ -109,6 +109,9 @@ task :new_post, :title do |t, args|&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt; post.puts &quot;categories: &quot;
</span><span class='line'> post.puts &quot;---&quot;
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;   end
</span><span class='line'><span class="gi">+  if args[:open_in_editor]</span>
</span><span class='line'><span class="gi">+    &lt;code&gt;$EDITOR #{filename}&lt;/code&gt;</span>
</span><span class='line'><span class="gi">+  end</span>
</span><span class='line'> end&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt; # usage rake new_page[my-new-page] or rake new_page[my-new-page.html] or rake new_page (defaults to &quot;new-page.markdown&quot;)
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
