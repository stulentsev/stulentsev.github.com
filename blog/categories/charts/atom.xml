<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: charts | Byte Friendly]]></title>
  <link href="http://tech.tulentsev.com/blog/categories/charts/atom.xml" rel="self"/>
  <link href="http://tech.tulentsev.com/"/>
  <updated>2018-02-22T12:13:10+03:00</updated>
  <id>http://tech.tulentsev.com/</id>
  <author>
    <name><![CDATA[Sergio Tulentsev]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[DIY: funnel chart]]></title>
    <link href="http://tech.tulentsev.com/2012/10/diy-funnel-chart-with-highcharts-dot-js/"/>
    <updated>2012-10-20T20:02:00+04:00</updated>
    <id>http://tech.tulentsev.com/2012/10/diy-funnel-chart-with-highcharts-dot-js</id>
    <content type="html"><![CDATA[<p>Recently I came across this excellent way of visualizing a funnel. It's simple, informative
and it doesn't look like a freaking funnel (with neck and all).</p>

<p><img src="/images/uploads/2012/10/funnel1.png"></p>

<p><a href="http://chart.apis.google.com/chart?cht=bhs&amp;chco=ffffff,FF9900&amp;chxt=x,x,y&amp;chxl=1%3a|Percentage%20converting|2%3a|Step%206|Step%205|Step%204|Step%203|Step%202|Step%201&amp;chxp=1,50|3,50&amp;chd=t:0,12.5,28,29,35.5,48.5|100,75,44,42,29,3&amp;chbh=a&amp;chs=800x230&amp;chm=N%2a%2a%,000000,1,-1,11,,c&amp;chds=0,100">link to source</a></p>

<p>The only negative property of it is that it's implemented with Google Charts API. Sure,
it's free and pretty, but it's also an external service call and a dependency. Today I'll
show you how to make this kind of charts yourself in your charting library (I'll be using
<a href="http://highcharts.com">highcharts.js</a>).</p>

<!-- more -->


<p>This can be done with any charting library that supports stacked bar charts. Because that's
what it is, a stacked bar. The trick is that one of the stack parts is invisible and serves
as a padding. Look:</p>

<p><img src="/images/uploads/2012/10/funnel2.png">
<a href="http://chart.apis.google.com/chart?cht=bhs&amp;chco=0000ff,FF9900&amp;chxt=x,x,y&amp;chxl=1%3a|Percentage%20converting|2%3a|Step%206|Step%205|Step%204|Step%203|Step%202|Step%201&amp;chxp=1,50|3,50&amp;chd=t:0,12.5,28,29,35.5,48.5|100,75,44,42,29,3&amp;chbh=a&amp;chs=800x230&amp;chm=N%2a%2a%,000000,1,-1,11,,c&amp;chds=0,100">link to source</a></p>

<p>You see, the basic idea is pretty simple. The only hard part is to translate into series
of commands to your charting lib. I have made a small function for myself that does creates
a series for highcharts:</p>

<p>``` javascript
var makeSeriesConfig = function (values) {</p>

<pre><code>// we need max value to calculate padding correctly
var max_value = null;
values.forEach(function (v) {
    if (!max_value || max_value &lt; v.value) {
        max_value = v.value;
    }
});

var padding = {
    name: 'padding',
    dataLabels: {
        enabled: false // don't show labels for padding
    },
    data: [] // will fill later
};

var centralPiece = {
    name: 'Value',
    data: [], // will fill later
    dataLabels: {
        enabled: true,
    }
}

values.forEach(function (v) {
    var w = (max_value - v.value) / 2;
    padding.data.push({
        y: w,
        color: 'white' // background color
    });

    centralPiece.data.push({
      y: v.value,
      name: v.name
    });
});


return [centralPiece, padding]
</code></pre>

<p>};</p>

<p>```</p>

<p>Later we use this function in a chart definition:</p>

<p>``` javascript
var chart;
$(document).ready(function () {</p>

<pre><code>chart = new Highcharts.Chart({
    chart: {
        renderTo: 'container',
        type: 'bar'
    },
    // ... other options go here ...
    series: makeSeriesConfig([
                                {name: 'Step 1', value: 300},
                                {name: 'Step 2', value: 240},
                                {name: 'Step 3', value: 70},
                                {name: 'Step 4', value: 40},
                                {name: 'Step 5', value: 10}
                            ])
});
</code></pre>

<p>});
```</p>

<p>Here's my final result which I'm happy with and which is going from proof-of-concept to
active development.</p>

<h2>Final result</h2>

<p><iframe style="width: 100%; height: 300px" src="http://jsfiddle.net/4fpua/embedded/js,resources,html,css,result/light/"></iframe></p>
]]></content>
  </entry>
  
</feed>
